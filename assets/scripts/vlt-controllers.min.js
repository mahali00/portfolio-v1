!(function ($) {
  "use strict";
  (VLTJS.animatedBlock = {
    init: function () {
      var el;
      $(".vlt-animated-block").each(function () {
        var $this = $(this);
        VLTJS.window.on("vlt.change-slide", function () {
          $this.removeClass("animated"),
            $this.parents(".vlt-section").hasClass("active") &&
              $this.addClass("animated");
        });
      });
    },
  }),
    VLTJS.animatedBlock.init();
})(jQuery),
  (function ($) {
    "use strict";
    (VLTJS.counterUp = {
      init: function () {
        var el;
        void 0 !== $.fn.numerator &&
          $(".vlt-counter-up, .vlt-counter-up-small").each(function () {
            var $this = $(this),
              animation_duration = $this.data("animation-speed") || 1e3,
              ending_number = $this.data("ending-number") || 0,
              delimiter = $this.data("delimiter") || !1;
            VLTJS.window.on("vlt.change-slide", function () {
              if ($this.parents(".vlt-section").hasClass("active")) {
                var counter_el = $this.find(".counter").html("0");
                setTimeout(function () {
                  counter_el.numerator({
                    easing: "linear",
                    duration: animation_duration,
                    delimiter: delimiter,
                    toValue: ending_number,
                  });
                }, 500);
              }
            });
          });
      },
    }),
      VLTJS.counterUp.init();
  })(jQuery),
  (function ($) {
    "use strict";
    (VLTJS.customCursor = {
      init: function () {
        if ($(".vlt-is--custom-cursor").length) {
          VLTJS.body.append(
            '<div class="vlt-custom-cursor"><div class="circle"><span></span></div></div>'
          );
          var cursor,
            circle = $(".vlt-custom-cursor").find(".circle"),
            startPosition = { x: 0, y: 0 },
            endPosition = { x: 0, y: 0 },
            delta = 0.25;
          "undefined" != typeof gsap &&
            (gsap.set(circle, { xPercent: -50, yPercent: -50 }),
            VLTJS.document.on("mousemove", function (e) {
              var offsetTop =
                window.pageYOffset || document.documentElement.scrollTop;
              (startPosition.x = e.pageX),
                (startPosition.y = e.pageY - offsetTop);
            }),
            gsap.ticker.add(function () {
              (endPosition.x += 0.25 * (startPosition.x - endPosition.x)),
                (endPosition.y += 0.25 * (startPosition.y - endPosition.y)),
                gsap.set(circle, { x: endPosition.x, y: endPosition.y });
            }),
            VLTJS.document
              .on("mousedown", function () {
                gsap.to(circle, 0.3, { scale: 0.7 });
              })
              .on("mouseup", function () {
                gsap.to(circle, 0.3, { scale: 1 });
              }),
            VLTJS.document
              .on(
                "mouseenter",
                "input, textarea, select, .vlt-video-button > a",
                function () {
                  gsap.to(circle, 0.3, { scale: 0, opacity: 0 });
                }
              )
              .on(
                "mouseleave",
                "input, textarea, select, .vlt-video-button > a",
                function () {
                  gsap.to(circle, 0.3, { scale: 1, opacity: 0.1 });
                }
              ),
            VLTJS.document
              .on("mouseenter", 'a, button, [role="button"]', function () {
                gsap.to(circle, 0.3, { height: 60, width: 60 });
              })
              .on("mouseleave blur", 'a, button, [role="button"]', function () {
                gsap.to(circle, 0.3, { height: 15, width: 15 });
              }),
            VLTJS.document
              .on("mouseenter", "[data-cursor]", function () {
                var $this = $(this);
                gsap.to(circle, 0.3, {
                  height: 80,
                  width: 80,
                  opacity: 1,
                  onStart: function () {
                    circle.find("span").html($this.attr("data-cursor"));
                  },
                });
              })
              .on("mouseleave", "[data-cursor]", function () {
                gsap.to(circle, 0.3, {
                  height: 15,
                  width: 15,
                  opacity: 0.1,
                  onStart: function () {
                    circle.find("span").html("");
                  },
                });
              }));
        }
      },
    }),
      VLTJS.isMobile.any() || VLTJS.customCursor.init();
  })(jQuery),
  (function ($) {
    "use strict";
    (VLTJS.fullpageSlider = {
      init: function () {
        if (void 0 !== $.fn.pagepiling) {
          var el = $(".vlt-fullpage-slider"),
            progress_bar = el.find(".vlt-fullpage-slider-progress-bar"),
            numbers = el.find(".vlt-fullpage-slider-numbers"),
            loop_top = !!el.data("loop-top"),
            loop_bottom = !!el.data("loop-bottom"),
            speed = el.data("speed") || 800,
            anchors = [];
          VLTJS.body.css("overflow", "hidden"),
            VLTJS.html.css("overflow", "hidden"),
            el.find("[data-anchor]").each(function () {
              anchors.push($(this).data("anchor"));
            }),
            vlthemes_navbar_solid(),
            el.pagepiling({
              menu: ".vlt-offcanvas-menu ul.sf-menu, .vlt-fullpage-slider-progress-bar",
              scrollingSpeed: speed,
              loopTop: loop_top,
              loopBottom: loop_bottom,
              anchors: anchors,
              sectionSelector: ".vlt-section",
              navigation: !1,
              afterRender: function () {
                vlthemes_show_navigation(),
                  vlthemes_page_brightness(),
                  vlthemes_slide_counter(),
                  VLTJS.window.trigger("vlt.change-slide");
              },
              onLeave: function (index, nextIndex, direction) {
                vlthemes_page_brightness(),
                  vlthemes_navigation(direction, nextIndex),
                  vlthemes_slide_counter(),
                  VLTJS.window.trigger("vlt.change-slide");
              },
              afterLoad: function (anchorLink, index) {
                progress_bar.find("li.active").prevAll().addClass("prev"),
                  vlthemes_navbar_solid();
              },
            }),
            numbers.on("click", ">a", function (e) {
              e.preventDefault(), $.fn.pagepiling.moveSectionDown();
            }),
            el.find(".pp-scrollable").on("scroll", function () {
              var scrollTop;
              $(this).scrollTop() > 0
                ? $(".vlt-navbar").addClass("vlt-navbar--solid")
                : $(".vlt-navbar").removeClass("vlt-navbar--solid");
            });
        }
        function vlthemes_navbar_solid() {
          el.find(".pp-section.active").scrollTop() > 0
            ? $(".vlt-navbar").addClass("vlt-navbar--solid")
            : $(".vlt-navbar").removeClass("vlt-navbar--solid");
        }
        function vlthemes_show_navigation() {
          progress_bar
            .find("li:first-child")
            .addClass("active")
            .end()
            .addClass("is-show");
        }
        function vlthemes_page_brightness() {
          var section;
          switch (el.find(".vlt-section.active").data("brightness")) {
            case "light":
              VLTJS.html.removeClass("is-light").addClass("is-dark");
              break;
            case "dark":
              VLTJS.html.removeClass("is-dark").addClass("is-light");
          }
        }
        function vlthemes_navigation(direction, index) {
          switch (direction) {
            case "down":
              progress_bar
                .find("li:nth-child(" + index + ")")
                .prevAll()
                .addClass("prev");
              break;
            case "up":
              progress_bar
                .find("li:nth-child(" + index + ")")
                .removeClass("prev");
          }
        }
        function vlthemes_slide_counter() {
          var section,
            index = el.find(".vlt-section.active").index();
          0 == index
            ? numbers.html(
                '<a href="#"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="square" stroke-linejoin="round"><line x1="12" y1="5" x2="12" y2="19"></line><polyline points="19 12 12 19 5 12"></polyline></svg></a>'
              )
            : numbers.html(VLTJS.addLedingZero(index + 1));
        }
      },
    }),
      VLTJS.fullpageSlider.init();
  })(jQuery),
  (function ($) {
    "use strict";
    var menuIsOpen = !1;
    (VLTJS.menuOffcanvas = {
      config: { easing: "power2.out" },
      init: function () {
        var menu = $(".vlt-offcanvas-menu"),
          navigation = menu.find("ul.sf-menu"),
          navigationItem = navigation.find("> li"),
          header = $(".vlt-offcanvas-menu__header"),
          footer = $(".vlt-offcanvas-menu__footer > div"),
          menuOpen = $(".js-offcanvas-menu-open"),
          menuClose = $(".js-offcanvas-menu-close"),
          siteOverlay = $(".vlt-site-overlay");
        void 0 !== $.fn.superclick &&
          navigation.superclick({
            delay: 300,
            cssArrows: !1,
            animation: { opacity: "show", height: "show" },
            animationOut: { opacity: "hide", height: "hide" },
          }),
          menuOpen.on("click", function (e) {
            e.preventDefault(),
              menuIsOpen ||
                VLTJS.menuOffcanvas.open_menu(
                  menu,
                  siteOverlay,
                  navigationItem,
                  header,
                  footer
                );
          }),
          menuClose.on("click", function (e) {
            e.preventDefault(),
              menuIsOpen &&
                VLTJS.menuOffcanvas.close_menu(
                  menu,
                  siteOverlay,
                  navigationItem,
                  header,
                  footer
                );
          }),
          siteOverlay.on("click", function (e) {
            e.preventDefault(),
              menuIsOpen &&
                VLTJS.menuOffcanvas.close_menu(
                  menu,
                  siteOverlay,
                  navigationItem,
                  header,
                  footer
                );
          }),
          VLTJS.document.keyup(function (e) {
            27 === e.keyCode &&
              menuIsOpen &&
              (e.preventDefault(),
              VLTJS.menuOffcanvas.close_menu(
                menu,
                siteOverlay,
                navigationItem,
                header,
                footer
              ));
          }),
          navigationItem
            .filter("[data-menuanchor]")
            .on("click", "a", function () {
              menuIsOpen &&
                VLTJS.menuOffcanvas.close_menu(
                  menu,
                  siteOverlay,
                  navigationItem,
                  header,
                  footer
                );
            });
      },
      open_menu: function (menu, siteOverlay, navigationItem, header, footer) {
        (menuIsOpen = !0),
          "undefined" != typeof gsap &&
            gsap
              .timeline({ defaults: { ease: this.config.easing } })
              .set(VLTJS.html, { overflow: "hidden" })
              .to(siteOverlay, 0.3, { autoAlpha: 1 })
              .fromTo(
                menu,
                0.6,
                { x: "100%" },
                { x: 0, visibility: "visible" },
                "-=.3"
              )
              .fromTo(
                header,
                0.3,
                { x: 50, autoAlpha: 0 },
                { x: 0, autoAlpha: 1 },
                "-=.3"
              )
              .fromTo(
                navigationItem,
                0.3,
                { x: 50, autoAlpha: 0 },
                { x: 0, autoAlpha: 1, stagger: { each: 0.1, from: "start" } },
                "-=.15"
              )
              .fromTo(
                footer,
                0.3,
                { x: 50, autoAlpha: 0 },
                { x: 0, autoAlpha: 1, stagger: { each: 0.1, from: "start" } },
                "-=.15"
              );
      },
      close_menu: function (menu, siteOverlay, navigationItem, header, footer) {
        (menuIsOpen = !1),
          "undefined" != typeof gsap &&
            gsap
              .timeline({ defaults: { ease: this.config.easing } })
              .set(VLTJS.html, { overflow: "inherit" })
              .to(footer, 0.3, {
                x: 50,
                autoAlpha: 0,
                stagger: { each: 0.1, from: "end" },
              })
              .to(
                navigationItem,
                0.3,
                { x: 50, autoAlpha: 0, stagger: { each: 0.1, from: "end" } },
                "-=.15"
              )
              .to(header, 0.3, { x: 50, autoAlpha: 0 }, "-=.15")
              .to(menu, 0.6, { x: "100%" }, "-=.15")
              .set(menu, { visibility: "hidden" })
              .to(siteOverlay, 0.3, { autoAlpha: 0 }, "-=.6");
      },
    }),
      VLTJS.menuOffcanvas.init();
  })(jQuery),
  (function ($) {
    "use strict";
    "function" == typeof FastClick && FastClick.attach(document.body);
  })(jQuery),
  (function ($) {
    "use strict";
    if (void 0 !== $.fn.animsition) {
      var el = $(".animsition");
      el.animsition({
        inDuration: 500,
        outDuration: 500,
        linkElement:
          'a:not([target="_blank"]):not([href^="#"]):not([rel="nofollow"]):not([href~="#"]):not([href^=mailto]):not([href^=tel]):not(.sf-with-ul)',
        loadingClass: "animsition-loading-2",
        loadingInner:
          '<div class="spinner"><span class="double-bounce-one"></span><span class="double-bounce-two"></span></div>',
      }),
        el.on("animsition.inEnd", function () {
          VLTJS.window.trigger("vlt.preloader_done"),
            VLTJS.html.addClass("vlt-is-page-loaded");
        });
    }
  })(jQuery),
  (function ($) {
    "use strict";
    (VLTJS.progressBar = {
      init: function () {
        var el;
        "undefined" != typeof gsap &&
          $(".vlt-progress-bar").each(function () {
            var $this = $(this),
              final_value = $this.data("final-value") || 0,
              animation_duration = $this.data("animation-speed") || 0,
              delay = 500,
              obj = { count: 0 };
            VLTJS.window.on("vlt.change-slide", function () {
              $this.parents(".vlt-section").hasClass("active") &&
                ((obj.count = 0),
                $this
                  .find(".vlt-progress-bar__title > .counter")
                  .text(Math.round(obj.count)),
                gsap.set($this.find(".vlt-progress-bar__bar > span"), {
                  width: 0,
                }),
                gsap.to(obj, animation_duration / 1e3 / 2, {
                  count: final_value,
                  delay: 0.5,
                  onUpdate: function () {
                    $this
                      .find(".vlt-progress-bar__title > .counter")
                      .text(Math.round(obj.count));
                  },
                }),
                gsap.to(
                  $this.find(".vlt-progress-bar__bar > span"),
                  animation_duration / 1e3,
                  { width: final_value + "%", delay: 0.5 }
                ));
            });
          });
      },
    }),
      VLTJS.progressBar.init();
  })(jQuery),
  (function ($) {
    "use strict";
    (VLTJS.projectShowcase = {
      initSlider: function () {
        if ("undefined" != typeof Swiper) {
          var el = $(".vlt-project-showcase-slider .swiper-container");
          new Swiper(el, {
            speed: 1e3,
            spaceBetween: 30,
            grabCursor: !0,
            slidesPerView: 1,
            breakpoints: { 575: { slidesPerView: 2 } },
            navigation: {
              nextEl: $(".vlt-project-slider-controls .next"),
              prevEl: $(".vlt-project-slider-controls .prev"),
            },
            pagination: {
              el: $(".vlt-project-slider-controls .pagination"),
              clickable: false,
              type: "fraction",
              renderFraction: function (currentClass, totalClass) {
                return (
                  '<span class="' +
                  currentClass +
                  '"></span>' +
                  '<span class="sep">/</span>' +
                  '<span class="' +
                  totalClass +
                  '"></span>'
                );
              },
            },
          });
        }
      },
      initParallax: function () {
        if ("undefined" != typeof gsap) {
          var el = $(".vlt-project-showcase"),
            items = el.find(".vlt-project-showcase__items"),
            item = items.find(".vlt-project-showcase__item"),
            images = el.find(".vlt-project-showcase__images"),
            image = images.find(".vlt-project-showcase__image"),
            wDiff,
            value,
            sliderWidth = el.outerWidth(!0),
            sliderImageWidth = images.outerWidth(!0),
            itemsWidth = items.outerWidth(),
            sliderImageDiff = (sliderWidth - sliderImageWidth) / sliderWidth;
          (wDiff = itemsWidth / sliderWidth - 1),
            (wDiff = (sliderWidth - itemsWidth) / sliderWidth),
            item.on("mouseenter", function () {
              item.removeClass("is-active"),
                image.removeClass("is-active"),
                $(this).addClass("is-active"),
                image.eq($(this).index()).addClass("is-active");
            }),
            item.eq(0).trigger("mouseenter"),
            VLTJS.window.on("mousemove", function (e) {
              value = e.pageX - el.offset().left;
            }),
            gsap.ticker.add(function () {
              gsap.set(items, { x: value * wDiff, ease: "power3.out" }),
                gsap.set(images, {
                  right: value * sliderImageDiff,
                  ease: "power3.out",
                });
            });
        }
      },
    }),
      VLTJS.projectShowcase.initSlider(),
      VLTJS.projectShowcase.initParallax(),
      VLTJS.debounceResize(function () {
        VLTJS.projectShowcase.initParallax();
      });
  })(jQuery),
  (function ($) {
    "use strict";
    (VLTJS.testimonialSlider = {
      init: function () {
        var el;
        "undefined" != typeof Swiper &&
          $(".vlt-testimonial-slider .swiper-container").each(function () {
            var $this;
            $(this)
              .find(".swiper-wrapper > *")
              .wrap('<div class="swiper-slide">'),
              new Swiper(this, {
                speed: 1e3,
                spaceBetween: 30,
                grabCursor: !0,
                effect: "coverflow",
                slidesPerView: 1,
                navigation: {
                  nextEl: $(".vlt-testimonial-slider-controls .next"),
                  prevEl: $(".vlt-testimonial-slider-controls .prev"),
                },
                pagination: {
                  el: $(".vlt-testimonial-slider-controls .pagination"),
                  clickable: !1,
                  type: "fraction",
                  renderFraction: function (currentClass, totalClass) {
                    return (
                      '<span class="' +
                      currentClass +
                      '"></span><span class="sep">/</span><span class="' +
                      totalClass +
                      '"></span>'
                    );
                  },
                },
              });
          });
      },
    }),
      VLTJS.testimonialSlider.init();
  })(jQuery),
  (function ($) {
    "use strict";
    (VLTJS.timelineSlider = {
      init: function () {
        var el;
        "undefined" != typeof Swiper &&
          $(".vlt-timeline-slider .swiper-container").each(function () {
            var $this;
            $(this)
              .find(".swiper-wrapper > *")
              .wrap('<div class="swiper-slide">'),
              new Swiper(this, {
                speed: 1e3,
                spaceBetween: 0,
                grabCursor: !0,
                slidesPerView: 1,
                navigation: {
                  nextEl: $(".vlt-timeline-slider-controls .next"),
                  prevEl: $(".vlt-timeline-slider-controls .prev"),
                },
                pagination: {
                  el: $(".vlt-timeline-slider-controls .pagination"),
                  clickable: !1,
                  type: "fraction",
                  renderFraction: function (currentClass, totalClass) {
                    return (
                      '<span class="' +
                      currentClass +
                      '"></span><span class="sep">/</span><span class="' +
                      totalClass +
                      '"></span>'
                    );
                  },
                },
              });
          });
      },
    }),
      VLTJS.timelineSlider.init();
  })(jQuery);
